#<!-- Informacion de host de SAP Service Layer -->
sapB1.port=50000
sapB1.host=sapb1.jmcgroup.com.ar

#<!-- CRONs de cuando se ejecutan los flow. El cron1 es Fetch, el cron2 es Distribute -->
sapB1.cron1=0 0,5,10,15,20,25,30,35,40,45,50,55 * ? * * *
sapB1.cron2=0 2,7,12,17,22,27,32,37,42,47,52,57 * ? * * *

#<!-- Informacion de Login de la DB Padre -->
sapB1.DB=JMCG_DEV
sapB1.user=holding2
sapB1.pass=Integral1.

#<!-- Nombre en Ingles API 	== 	Nombre en Español en SAP	-->
#<!-- Items             	==  Articulos            		-->
#<!-- Purchase Requests 	==  Solicitud de Compra  		-->
#<!-- BusinessPartners  	==  Socios de Negocios   		-->
#<!-- Quotations        	==  Ofretas de Venta     		-->
#<!-- Orders 				== 	Ordenes de Venta 	 		-->

#<!-- Esto es la lista de las API de SAP que se invocan, separadas por coma -->
#<!-- Items,BusinessPartners,PurchaseRequests,Quotations,Orders, PurchaseOrders
#,BusinessPartners,PurchaseRequests,Quotations,Orders,PurchaseOrders,PriceLists
sapB1.pathList=Items,BusinessPartners,PurchaseRequests,Quotations,Orders,PurchaseOrders

#<!-- Esto es la lista de codigos unicos de cada API -->
sapB1.UniqueID.List={'BusinessPartners':'CardCode', 'Items':'ItemCode', 'PurchaseRequests':'DocEntry', 'Quotations':'DocEntry','Orders':'DocEntry', 'PurchaseOrders':'DocEntry', 'PriceLists':'PriceListNo'}
#<!-- String o Integer segun el ID en el API se especifique como ('0') o (0) - String o Integer -->
#<!-- Generalmente, Documentos son Integer, y Maestros son String -->
sapB1.UniqueType.List={'BusinessPartners':'String','Items':'String',  'PurchaseRequests':'Integer', 'Quotations':'Integer','Orders':'Integer','PurchaseOrders':'Integer', 'PriceLists':'Integer'}

#<!-- Esto es el mapeo de ubicaciones a cada almacen en Orders -->
# 'JM':'JM_DEV', 
sapB1.Orders.Destinations ={'SD':'SD_DEV'}


#<!-- {'JMCG_DEV':'{\\"CompanyDB\\": \\"JMCG_DEV\\",\\"UserName\\":\\"holding\\", \\"Password\\":\\"Integral1.\\"}', 'JMCG_DEV2':'{\\"CompanyDB\\": \\"JMCG_DEV\\",\\"UserName\\":\\"holding\\", \\"Password\\":\\"Integral1.\\"}', 'JMCG_DEV3':'{\\"CompanyDB\\": \\"JMCG_DEV\\",\\"UserName\\":\\"holding\\", \\"Password\\":\\"Integral1.\\"}'}  -->
#<!-- {'JMC_DEV':'{\\"CompanyDB\\": \\"SI_DEV\\",\\"UserName\\":\\"holding\\", \\"Password\\":\\"Integral1.\\"}', 'JMC_DEV2':'{\\"CompanyDB\\": \\"SI_DEV\\",\\"UserName\\":\\"holding\\", \\"Password\\":\\"Integral1.\\"}', 'JMC_DEV3':'{\\"CompanyDB\\": \\"SI_DEV\\",\\"UserName\\":\\"holding\\", \\"Password\\":\\"Integral1.\\"}'}           -->

#<!-- Lista de Destinaciones (Bases de datos hijas) separadas por coma - SD_DEV,SI_DEV -->
sapB1.destinations=SD_DEV
#<!-- Tabla de Destinaciones que cada API tiene asignada. 								-->
#<!-- El Flow primero checkea por la lista anterior, 									-->
#<!-- y despues revisa si esa destinacion esta presente en esta lista de abajo 			-->
#<!-- Cada destinacion dentro de cada objeto va separado con coma. ej. SD_DEV,SI_DEV,etc-->
sapB1.destinationsTable={'BusinessPartners':'{\\"destinations\\": \\"SD_DEV,JM_DEV\\"}', 'Items':'{\\"destinations\\": \\"SD_DEV,JM_DEV\\"}', 'PurchaseRequests':'{\\"destinations\\": \\"SD_DEV,JM_DEV\\"}', 'Quotations':'{\\"destinations\\": \\"SD_DEV,JM_DEV\\"}', 'Orders':'{\\"destinations\\": \\"SD_DEV,JM_DEV\\"}', 'PurchaseOrders':'{\\"destinations\\": \\"SD_DEV,JM_DEV\\"}', 'PriceLists':'{\\"destinations\\": \\"SD_DEV,JM_DEV\\"}'}
#<!-- Tabla con la info de login de cada destinacion 							-->
#<!-- Cada una es un STRING JSON Escapeado que se manda tal cual queda a SAP 	-->
sapB1.destinationsConnections={'SD_DEV':'{\\"CompanyDB\\": \\"SD_DEV\\",\\"UserName\\":\\"holding\\", \\"Password\\":\\"Integral1.\\"}','JM_DEV':'{\\"CompanyDB\\": \\"JM_DEV\\",\\"UserName\\":\\"holding\\", \\"Password\\":\\"Integral1.\\"}'}

#<!-- Informacion de Login del ActiveMQ -->
sapB1.activeMQ.host=tcp://localhost:61616
sapB1.activeMQ.user=admin
sapB1.activeMQ.pass=admin
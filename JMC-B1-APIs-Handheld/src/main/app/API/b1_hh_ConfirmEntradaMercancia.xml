<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    <flow name="b1_hh_entradaMercanciaInventarioFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="ConfirmEntradaMercancia" allowedMethods="POST" doc:name="HTTP"/>
        <logger message="ConfirmEntradaMercancia recibido: #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger" category="jmc_hh"/>
        <expression-component doc:name="Convert and save payload"><![CDATA[payload = acqua.util.JSONUtil.stringToMap(message.payloadAs(java.lang.String));
flowVars.inputData = payload;
flowVars.sociedad = payload.sociedad;
flowVars.codigo = payload.codigo;
flowVars.puntoventa = payload.puntoventa;
flowVars.letra = payload.letra;
flowVars.foliodesde = payload.foliodesde;
flowVars.foliohasta = payload.foliohasta;]]></expression-component>
        <transformer ref="LeerRecuentoEntradaMercancia" doc:name="Leer datos entrada"/>
        <choice doc:name="Choice">
            <when expression="#[payload != null]">
                <transformer ref="BuildConteoInventario" doc:name="Build Conteo Inventario"/>
                <expression-component doc:name="save data"><![CDATA[flowVars.documentSaved = acqua.util.JSONUtil.javaToJSONToString(payload);
flowVars.destination = flowVars.sociedad;]]></expression-component>
                <flow-ref name="b1_hh_loginToSAP" doc:name="b1_hh_loginToSAP"/>
                <flow-ref name="b1_hh_entradaMercancia_SendDocument" doc:name="b1_hh_entradaMercancia_SendDocument"/>
                <logger message="#[payload]" level="INFO" doc:name="Logger" category="jmc_hh"/>
            </when>
            <otherwise>
                <logger message="ConfirmEntradaMercancia - No hay datos para mandar " level="INFO" doc:name="Logger" category="jmc_hh"/>
                <set-payload value="{&quot;resultado&quot;: false, &quot;mensaje&quot;:&quot;No hay articulos para mandar&quot;}" doc:name="Set Payload"/>
            </otherwise>
        </choice>

    </flow>

    <flow name="b1_hh_entradaMercancia_SendDocument">
        <choice doc:name="Choice">
            <when expression="#[flowVars.loginResult.equals(&quot;OK&quot;)]">
                <set-payload value="#[flowVars.documentSaved]" doc:name="Set saved document as payload"/>
                <http:request config-ref="HTTP_Request_Configuration" path="InventoryCountings" method="POST" doc:name="Update inventory counting">
                    <http:success-status-code-validator values="200..299,404,400"/>
                </http:request>
                <choice doc:name="Choice">
                    <when expression="#[message.inboundProperties['http.status'] &lt; 300]">
                        <expression-component doc:name="Answer"><![CDATA[payload = acqua.util.JSONUtil.stringToMap(message.payloadAs(java.lang.String));]]></expression-component>
                        <transformer ref="BorrarRecuentoEntradaMercancia" doc:name="OK, borrar recuentro"/>
                        <set-payload value="{&quot;resultado&quot;:true}" doc:name="Set Payload"/>
                    </when>
                    <when expression="#[message.inboundProperties['http.status'] == 400]">
                        <expression-component doc:name="Set variables for report"><![CDATA[flowVars.status = message.inboundProperties["http.status"];
flowVars.reason = message.inboundProperties["http.reason"];
flowVars.payloadSent = flowVars.documentSaved;
flowVars.responseRecived = message.payloadAs(java.lang.String);
flowVars.method = "ConfirmEntradaMercancia";
flowVars.requestURL = "POST";]]></expression-component>
                        <expression-component doc:name="Convert to hash"><![CDATA[payload = acqua.util.JSONUtil.stringToMap(message.payloadAs(java.lang.String));]]></expression-component>
                        <set-payload value="{&quot;resultado&quot; : false, &quot;mensaje&quot;:&quot;#[acqua.util.WorkUtils.replaceAll(payload.error.message.value)]&quot;}" doc:name="Set Payload"/>
                        <expression-component doc:name="save payload"><![CDATA[flowVars.savePayloadForAnswer = payload;]]></expression-component>
                        <flow-ref name="B1_Sync_EmailReportingFlow" doc:name="B1_Sync_EmailReportingFlow"/>
                        <expression-component doc:name="re-set payload"><![CDATA[payload = flowVars.savePayloadForAnswer;]]></expression-component>
                        <logger message="Devolver confirmarEntradaMercancia: #[payload]" level="INFO" category="jmc.log" doc:name="Logger"/>
                    </when>
                    <otherwise>
                        <expression-component doc:name="Set variables for report"><![CDATA[flowVars.status = message.inboundProperties["http.status"];
flowVars.reason = message.inboundProperties["http.reason"];
flowVars.payloadSent = flowVars.documentSaved;
flowVars.responseRecived = message.payloadAs(java.lang.String);
flowVars.method = "ConfirmEntradaMercancia";
flowVars.requestURL = "POST";]]></expression-component>
                        <flow-ref name="B1_Sync_EmailReportingFlow" doc:name="B1_Sync_EmailReportingFlow"/>
                        <set-payload value="{&quot;resultado&quot; : false, &quot;mensaje&quot;:&quot;#[acqua.util.WorkUtils.replaceAll(message.payloadAs(java.lang.String))]&quot;}" doc:name="Set Payload"/>
                    </otherwise>
                </choice>
            </when>
            <otherwise>
                <set-payload value="{  &quot;resultado&quot;:false,&quot;mensaje&quot;:&quot;Fallo el login. Checkear logs.&quot; } " doc:name="Set answer for failure"/>
            </otherwise>
        </choice>
    </flow>
</mule>

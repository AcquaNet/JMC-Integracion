#<!-- Informacion de host de SAP Service Layer -->
sapB1.port=50000
########################################
# conexion desde red jmc (interna)
########################################
#sapB1.host=192.168.10.2
########################################
# conexion desde red externa o VPN
########################################
sapB1.host=sapb1

#<!-- Informacion de Login de API para las HH -->
sapB1.user=holding
sapB1.pass=Integral1.

#<!-- Informacion de Login de la DB HANA ADMIN Padre -->
sapB1.DBUser = "SYSTEM";
sapB1.DBPass = "Pwjmcgroup1";
########################################
# conexion desde red jmc (interna)
########################################
#sapB1.DBConnection = "jdbc:sap://192.168.10.2:30015/";
########################################
# conexion desde red externa o VPN
########################################
sapB1.DBConnection = "jdbc:sap://sapb1:30015/";

# Sociedad donde poolear informacion de otras.
sapB1.DBInfo= "JMCG_QAS";

#<!-- Lista de Destinaciones (Bases de datos hijas) separadas por coma para Orders - SD,SI, etc -->
sapB1.destinationsCase=KA,SI,WB,KG,SG

#<!-- Esto es el mapeo de ubicaciones a cada almacen en Orders -->
# 'JM':'JM_DEV', 
sapB1.Orders.Destinations      ={'KA':'KA_QAS', 'SI':'SI_QAS', 'WB':'WB_DEV', 'KG':'KA_GDEV', 'SG':'SI_GDEV'}
#<!-- Esto es el mapeo de ubicaciones para sync stock (Inverso de Orders) -->
# 'JM':'JM_DEV', 
sapB1.Orders.DestinationsStock ={'KA':'KA_QAS', 'SI':'SI_QAS', 'WB':'WB_DEV', 'KG':'KA_GDEV', 'SG':'SI_GDEV'}

#<!-- Lista de Destinaciones (Bases de datos hijas) separadas por coma - SD_DEV,SI_DEV -->
sapB1.destinations=JMCG_DEV,KA_QAS,KA_GDEV,SI_QAS,SI_GDEV,WB_DEV
#<!-- Tabla de Destinaciones que cada API tiene asignada. 								-->
#<!-- El Flow primero checkea por la lista anterior, 									-->
#<!-- y despues revisa si esa destinacion esta presente en esta lista de abajo 			-->
#<!-- Cada destinacion dentro de cada objeto va separado con coma. ej. SD_DEV,SI_DEV,etc-->
sapB1.destinationsTable={'BusinessPartners':'{\\"destinations\\": \\"JMCG_DEV,KA_QAS,KA_GDEV,SI_QAS,SI_GDEV,WB_DEV\\"}', 'Items':'{\\"destinations\\": \\"JMCG_DEV,KA_QAS,KA_GDEV,SI_QAS,SI_GDEV,WB_DEV\\"}', 'PurchaseRequests':'{\\"destinations\\": \\"JMCG_DEV,KA_QAS,KA_GDEV,SI_QAS,SI_GDEV,WB_DEV\\"}', 'Quotations':'{\\"destinations\\": \\"JMCG_DEV,KA_QAS,KA_GDEV,SI_QAS,SI_GDEV,WB_DEV\\"}', 'Orders':'{\\"destinations\\": \\"JMCG_DEV,KA_QAS,KA_GDEV,SI_QAS,SI_GDEV,WB_DEV\\"}', 'PurchaseOrders':'{\\"destinations\\": \\"JMCG_DEV,KA_QAS,KA_GDEV,SI_QAS,SI_GDEV,WB_DEV\\"}', 'PriceLists':'{\\"destinations\\": \\"JMCG_DEV,KA_QAS,KA_GDEV,SI_QAS,SI_GDEV,WB_DEV\\"}'}
#<!-- Tabla con la info de login de cada destinacion 							-->
#<!-- Cada una es un STRING JSON Escapeado que se manda tal cual queda a SAP 	-->
sapB1.destinationsConnections={'JMCG_DEV':'{\\"CompanyDB\\": \\"JMCG_DEV\\",\\"UserName\\":\\"holding\\", \\"Password\\":\\"Integral1.\\"}','KA_QAS':'{\\"CompanyDB\\": \\"KA_QAS\\",\\"UserName\\":\\"holding\\", \\"Password\\":\\"Integral1.\\"}','SI_QAS':'{\\"CompanyDB\\": \\"SI_QAS\\",\\"UserName\\":\\"holding\\", \\"Password\\":\\"Integral1.\\"}','SI_GDEV':'{\\"CompanyDB\\": \\"SI_GDEV\\",\\"UserName\\":\\"holding\\", \\"Password\\":\\"Integral1.\\"}','WB_DEV':'{\\"CompanyDB\\": \\"WB_DEV\\",\\"UserName\\":\\"holding\\", \\"Password\\":\\"Integral1.\\"}'}'}


## Csv File properties
csvfile.directory=\\tmp
csvfile.name.pick=picking_
csvfile.name.counting=recuento_
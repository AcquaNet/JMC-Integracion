<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    
	<flow name="Confirmacion">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/Confirmacion" allowedMethods="POST" doc:name="HTTP"/>
        <flow-ref name="SetCredentialsHeaders" doc:name="SetCredentialsHeaders"/>
        <expression-component doc:name="Expression"><![CDATA[com.acqua.tools.ItemConsolidador.resetItems();
payload = message.payloadAs(java.lang.String);
payload = com.acqua.tools.JsonParser.jsonToObject(payload,"com.acqua.model.Entrada");]]></expression-component>

        <set-variable variableName="Entrada" value="#[payload]" doc:name="Set Entrada"/>
        <set-variable variableName="Ordenes" value="#[payload.ordenes]" doc:name="Set Ordenes"/>
        <set-variable variableName="Items" value="#[payload.itemProc]" doc:name="Set Items"/>
        <flow-ref name="consolidacionItems" doc:name="consolidacionItems"/>
        <flow-ref name="Document" doc:name="Document"/>
        <flow-ref name="getOrdenesSelec" doc:name="getOrdenesSelec"/>
        <flow-ref name="DocumentLines" doc:name="DocumentLines"/>
        <flow-ref name="confirEnvioToSap" doc:name="confirEnvioToSap"/>

    </flow>
    <sub-flow name="consolidacionItems">
        <set-payload value="#[flowVars.Items]" doc:name="Set Payload"/>
        <foreach doc:name="For Each">
            <expression-component doc:name="Expression"><![CDATA[com.acqua.tools.ItemConsolidador.addItem(payload.itemId,payload.desc)]]></expression-component>
        </foreach>
        <expression-component doc:name="Expression"><![CDATA[flowVars.itemsConsolidados = com.acqua.tools.ItemConsolidador.getItems()]]></expression-component>
    </sub-flow>
    <sub-flow name="Document">
        <set-payload value="#[flowVars.Entrada]" doc:name="Set Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <set-payload value="{   &quot;CardCode&quot;: &quot;#[payload.cardCode]&quot;,   &quot;Comments&quot;: &quot;#[payload.comentario]&quot;,   &quot;PointOfIssueCode&quot;:&quot;#[payload.pte]&quot;,   &quot;FolioNumberFrom&quot;: &quot;#[payload.folioD]&quot;,   &quot;FolioNumberTo&quot;: &quot;#[payload.folioA]&quot;,     " doc:name="Set Payload"/>
        <set-variable variableName="Document" value="#[payload]" doc:name="Set Document"/>
    </sub-flow>
    <flow name="getOrdenesSelec">
        <set-variable variableName="flowName" value="getOrdenesSelec" doc:name="Set flowName"/>
        <choice doc:name="Choice">
            <when expression="#[flowVars.filtro == null]">
                <set-payload value="#[flowVars.Ordenes]" doc:name="Set Payload"/>
                <foreach doc:name="For Each">
                    <choice doc:name="Choice">
                        <when expression="#[flowVars.filtro == null]">
                            <set-variable variableName="filtro" value="DocNum eq #[payload]" doc:name="Variable"/>
                        </when>
                        <otherwise>
                            <set-variable variableName="filtro" value="#[flowVars.filtro] or DocNum eq #[payload]" doc:name="Variable"/>
                        </otherwise>
                    </choice>
                </foreach>
            </when>
            <otherwise>
                <logger message="The filter is already loaded." level="INFO" doc:name="Logger" category="com.limpiolux"/>
            </otherwise>
        </choice>
        <logger message="[SAP Recuperar Ordenes de Compra GET] Filtro: [#[flowVars.filtro]]" level="INFO" category="com.limpiolux" doc:name="Logger"/>

        <http:request config-ref="HTTP_Request_Configuration" path="/PurchaseOrders" method="GET" doc:name="GET OC from SAP">
            <http:request-builder>
                <http:query-param paramName="$filter" value="#[flowVars.filtro]"/>
                <http:query-param paramName="$select" value="DocEntry, DocNum, DocumentLines"/>
            	<http:header headerName="Set-Cookie" value="B1SESSION=#[flowVars.SessID]; path=/b1s; "/>
                <http:header headerName="Set-Cookie" value="ROUTEID=.node0; path=/b1s;"/>
		</http:request-builder>
        </http:request>
        <logger message="Respuesta SAP: #[message.payloadAs(java.lang.String)]" level="INFO" category="com.limpiolux" doc:name="Logger"/>

        <expression-component doc:name="Expression"><![CDATA[payload = message.payloadAs(java.lang.String);
payload = com.acqua.tools.JsonParser.jsonToObject(payload, "com.acqua.model.OdataPO")]]></expression-component>
        <set-variable variableName="OrdenesSelect" value="#[payload.value]" doc:name="Variable"/>
        <set-payload value="#[payload.value]" doc:name="Set Payload"/>
        <exception-strategy ref="http-status-Choice_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>
    <sub-flow name="DocumentLines">
        <logger level="INFO" doc:name="Logger" message="Retriveing DocumentLines"/>
        <foreach doc:name="For Each">
            <json:object-to-json-transformer doc:name="Object to JSON"/>
            <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
            <set-variable variableName="DocEntry" value="#[payload.docEntry]" doc:name="set DocEntry"/>
            <set-payload value="#[payload.docLines]" doc:name="Set Payload"/>
            <foreach doc:name="For Each">
                <choice doc:name="Choice">
                    <when expression="#[payload.lineStatus == &quot;bost_Open&quot;]">
                        <expression-component doc:name="Expression"><![CDATA[payload.quantity = com.acqua.tools.ItemConsolidador.descItems(payload.itemCode,payload.quantity)]]></expression-component>
                        <choice doc:name="Choice">
                            <when expression="#[payload.quantity != 0]">
                                <set-payload value="{ &quot;ItemCode&quot;: &quot;#[payload.itemCode]&quot;,   &quot;Quantity&quot;: #[payload.quantity],   &quot;TaxCode&quot;: &quot;IVA_21&quot;,   &quot;UnitPrice&quot;: &quot;#[payload.unitPrice]&quot;, &quot;BaseType&quot;: 22, &quot;BaseEntry&quot;:#[flowVars.DocEntry], &quot;BaseLine&quot;:#[payload.lineNum]}" doc:name="Set Payload"/>
                                <choice doc:name="Choice">
                                    <when expression="#[flowVars.documentl == null]">
                                        <set-variable variableName="documentl" value="#[payload]" doc:name="set documentl"/>
                                    </when>
                                    <otherwise>
                                        <set-variable variableName="documentl" value="#[flowVars.documentl],#[payload]" doc:name="set documentl"/>
                                    </otherwise>
                                </choice>
                            </when>
                            <otherwise>
                                <logger message="No item recieved with itemCode #[payload.itemCode]" level="INFO" doc:name="Logger" category="com.limpiolux"/>
                            </otherwise>
                        </choice>
                    </when>
                    <otherwise>
                        <logger message="Item #[payload.itemCode] lineStatus #[payload.lineStatus]" level="INFO" doc:name="Logger" category="com.limpiolux"/>
                    </otherwise>
                </choice>

            </foreach>
        </foreach>
    </sub-flow>
    <flow name="confirEnvioToSap">
        <set-variable variableName="flowName" value="confirEnvioToSap" doc:name="Set flowName"/>
        <set-payload value="#[flowVars.Document] &quot;DocumentLines&quot;:[#[flowVars.documentl]] }" doc:name="Set Payload"/>
        <logger message="[SAP Ingreso de Entrada de Mercancias POST] #[payload]" level="INFO" category="com.limpiolux" doc:name="Logger"/>
        <http:request config-ref="HTTP_Request_Configuration" path="/PurchaseDeliveryNotes" method="POST" doc:name="HTTP">
            <http:request-builder>
                <http:header headerName="Set-Cookie" value="B1SESSION=#[flowVars.SessID]; path=/b1s; "/>
                <http:header headerName="Set-Cookie" value="ROUTEID=.node0; path=/b1s;"/>
            </http:request-builder>
        </http:request>
        <logger message="Respuesta SAP: #[message.payloadAs(java.lang.String)]" level="INFO" category="com.limpiolux" doc:name="Logger"/>
        <set-payload value="Entrada de Mercancias Realizada." doc:name="Set Payload"/>
        <logger message="#[payload]" level="INFO" doc:name="Logger" category="com.limpiolux"/>
        <message-properties-transformer doc:name="Message Properties">
            <add-message-property key="User" value="#[flowVars.User]"/>
            <add-message-property key="Password" value="#[flowVars.Pass]"/>
            <add-message-property key="SessionID" value="#[flowVars.SessID]"/>
            <add-message-property key="Database" value="#[flowVars.DB]"/>
        </message-properties-transformer>
        <exception-strategy ref="http-status-Choice_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>
</mule>
